/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_HOSTCALLS_ARGS_H
#define EDGER8R_HOSTCALLS_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
#include "../types.h"

/**** User defined types in EDL. ****/
typedef enum definitions
{
    TEST_HOSTREALLOC_INIT_VALUE = 88
} definitions;

/**** ECALL marshalling structs. ****/
typedef struct _test_host_malloc_args_t
{
    oe_result_t _result;
    size_t in_size;
    void_ptr* out_ptr;
} test_host_malloc_args_t;

typedef struct _test_host_calloc_args_t
{
    oe_result_t _result;
    size_t in_num;
    size_t in_size;
    void_ptr* out_ptr;
} test_host_calloc_args_t;

typedef struct _test_host_realloc_args_t
{
    oe_result_t _result;
    void_ptr in_ptr;
    size_t old_size;
    size_t new_size;
    void_ptr* out_ptr;
} test_host_realloc_args_t;

typedef struct _test_host_strndup_args_t
{
    oe_result_t _result;
    char* in_str;
    size_t in_size;
    char** out_str;
} test_host_strndup_args_t;

typedef struct _test_host_free_args_t
{
    oe_result_t _result;
    void_ptr in_ptr;
} test_host_free_args_t;

/**** OCALL marshalling structs. ****/
/* There were no ocalls. */

/**** Trusted function IDs ****/
enum
{
    hostcalls_fcn_id_test_host_malloc = 0,
    hostcalls_fcn_id_test_host_calloc = 1,
    hostcalls_fcn_id_test_host_realloc = 2,
    hostcalls_fcn_id_test_host_strndup = 3,
    hostcalls_fcn_id_test_host_free = 4,
    hostcalls_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{

    hostcalls_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_HOSTCALLS_ARGS_H
