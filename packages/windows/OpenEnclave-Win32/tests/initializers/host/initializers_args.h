/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_INITIALIZERS_ARGS_H
#define EDGER8R_INITIALIZERS_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
/* There were no user includes. */

/**** User defined types in EDL. ****/
typedef struct dummy_struct
{
    int32_t a;
    int32_t b;
} dummy_struct;

typedef union dummy_union
{
    dummy_struct x;
    int64_t y;
} dummy_union;

/**** ECALL marshalling structs. ****/
typedef struct _get_globals_args_t
{
    oe_result_t _result;
    int* global_int;
    float* global_float;
    int** global_ptr;
    dummy_struct* global_struct;
    dummy_union* global_union;
    int* global_array;
    bool get_default;
} get_globals_args_t;

typedef struct _set_globals_args_t
{
    oe_result_t _result;
    int global_int;
    float global_float;
    int* global_ptr;
    dummy_struct global_struct;
    dummy_union global_union;
    int* global_array;
    bool set_default;
} set_globals_args_t;

/**** OCALL marshalling structs. ****/
/* There were no ocalls. */

/**** Trusted function IDs ****/
enum
{
    initializers_fcn_id_get_globals = 0,
    initializers_fcn_id_set_globals = 1,
    initializers_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{

    initializers_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_INITIALIZERS_ARGS_H
