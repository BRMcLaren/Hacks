/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_ECALL_ARGS_H
#define EDGER8R_ECALL_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
#include "openenclave/internal/sgxtypes.h"

/**** User defined types in EDL. ****/
typedef enum test_enum
{
    NEW_MAGIC = 1967246473
} test_enum;

typedef struct test_args
{
    void* self;
    unsigned int magic;
    uint64_t base_heap_page;
    uint64_t num_heap_pages;
    uint64_t num_pages;
    void* base;
    oe_thread_data_t thread_data;
    uint64_t thread_data_addr;
    unsigned int mm;
    unsigned int dd;
    unsigned int yyyy;
    int setjmp_result;
    unsigned int magic2;
} test_args;

/**** ECALL marshalling structs. ****/
typedef struct _enc_test_args_t
{
    oe_result_t _result;
    test_args* args;
} enc_test_args_t;

/**** OCALL marshalling structs. ****/
/* There were no ocalls. */

/**** Trusted function IDs ****/
enum
{
    ecall_fcn_id_enc_test = 0,
    ecall_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{

    ecall_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_ECALL_ARGS_H
