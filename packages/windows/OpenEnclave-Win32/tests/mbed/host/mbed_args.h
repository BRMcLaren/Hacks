/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_MBED_ARGS_H
#define EDGER8R_MBED_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
#include "fcntl.h"
#include "sys/types.h"
#include "sys/stat.h"
#include "myfileio.h"

/**** User defined types in EDL. ****/
typedef struct mbed_args
{
    int skipped;
    int total;
} mbed_args;

typedef enum string_limit
{
    STRLEN = 1024
} string_limit;

/**** ECALL marshalling structs. ****/
typedef struct _test_args_t
{
    oe_result_t _result;
    int _retval;
    char* in_testname;
    size_t in_testname_len;
    char* out_testname;
    mbed_args* args;
} test_args_t;

/**** OCALL marshalling structs. ****/
typedef struct _mbed_test_open_args_t
{
    oe_result_t _result;
    int _retval;
    char* path;
    size_t path_len;
    int flags;
    mode_t mode;
} mbed_test_open_args_t;

typedef struct _mbed_test_read_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int fd;
    char* buf;
    size_t buf_len;
} mbed_test_read_args_t;

typedef struct _mbed_test_close_args_t
{
    oe_result_t _result;
    int _retval;
    int fd;
} mbed_test_close_args_t;

typedef struct _ocall_exit_args_t
{
    oe_result_t _result;
    int arg;
} ocall_exit_args_t;

/**** Trusted function IDs ****/
enum
{
    mbed_fcn_id_test = 0,
    mbed_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{
    mbed_fcn_id_mbed_test_open = 0,
    mbed_fcn_id_mbed_test_read = 1,
    mbed_fcn_id_mbed_test_close = 2,
    mbed_fcn_id_ocall_exit = 3,
    mbed_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_MBED_ARGS_H
