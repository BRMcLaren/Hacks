/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_CRYPTO_CRLS_CERT_CHAINS_ARGS_H
#define EDGER8R_CRYPTO_CRLS_CERT_CHAINS_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
/* There were no user includes. */

/**** User defined types in EDL. ****/
/* There were no user defined types. */

/**** ECALL marshalling structs. ****/
typedef struct _ecall_test_cert_chain_positive_args_t
{
    oe_result_t _result;
    char* root;
    size_t root_len;
    char* intermediate;
    size_t intermediate_len;
    char* leaf;
    size_t leaf_len;
    char* leaf2;
    size_t leaf2_len;
} ecall_test_cert_chain_positive_args_t;

typedef struct _ecall_test_cert_chain_negative_args_t
{
    oe_result_t _result;
    char* root;
    size_t root_len;
    char* intermediate;
    size_t intermediate_len;
    char* leaf;
    size_t leaf_len;
    char* leaf2;
    size_t leaf2_len;
} ecall_test_cert_chain_negative_args_t;

typedef struct _ecall_test_crls_args_t
{
    oe_result_t _result;
    char* root;
    size_t root_len;
    char* intermediate;
    size_t intermediate_len;
    char* leaf1;
    size_t leaf1_len;
    char* leaf2;
    size_t leaf2_len;
    char* root_crl1;
    size_t root_crl1_size;
    char* root_crl2;
    size_t root_crl2_size;
    char* intermediate_crl1;
    size_t intermediate_crl1_size;
    char* intermediate_crl2;
    size_t intermediate_crl2_size;
} ecall_test_crls_args_t;

/**** OCALL marshalling structs. ****/
/* There were no ocalls. */

/**** Trusted function IDs ****/
enum
{
    crypto_crls_cert_chains_fcn_id_ecall_test_cert_chain_positive = 0,
    crypto_crls_cert_chains_fcn_id_ecall_test_cert_chain_negative = 1,
    crypto_crls_cert_chains_fcn_id_ecall_test_crls = 2,
    crypto_crls_cert_chains_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{

    crypto_crls_cert_chains_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_CRYPTO_CRLS_CERT_CHAINS_ARGS_H
