/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_ABORTSTATUS_ARGS_H
#define EDGER8R_ABORTSTATUS_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
/* There were no user includes. */

/**** User defined types in EDL. ****/
/* There were no user defined types. */

/**** ECALL marshalling structs. ****/
typedef struct _regular_abort_args_t
{
    oe_result_t _result;
    int _retval;
} regular_abort_args_t;

typedef struct _generate_unhandled_hardware_exception_args_t
{
    oe_result_t _result;
    int _retval;
} generate_unhandled_hardware_exception_args_t;

typedef struct _test_ocall_after_abort_args_t
{
    oe_result_t _result;
    int _retval;
    void* thread_ready_count;
    void* is_enclave_crashed;
} test_ocall_after_abort_args_t;

typedef struct _normal_ecall_args_t
{
    oe_result_t _result;
    int _retval;
} normal_ecall_args_t;

/**** OCALL marshalling structs. ****/
typedef struct _foobar_args_t
{
    oe_result_t _result;
} foobar_args_t;

/**** Trusted function IDs ****/
enum
{
    abortStatus_fcn_id_regular_abort = 0,
    abortStatus_fcn_id_generate_unhandled_hardware_exception = 1,
    abortStatus_fcn_id_test_ocall_after_abort = 2,
    abortStatus_fcn_id_normal_ecall = 3,
    abortStatus_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{
    abortStatus_fcn_id_foobar = 0,
    abortStatus_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_ABORTSTATUS_ARGS_H
