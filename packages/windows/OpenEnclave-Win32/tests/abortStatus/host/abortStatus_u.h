/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_ABORTSTATUS_U_H
#define EDGER8R_ABORTSTATUS_U_H

#include <openenclave/host.h>

#include "abortStatus_args.h"

OE_EXTERNC_BEGIN

oe_result_t oe_create_abortStatus_enclave(
    const char* path,
    oe_enclave_type_t type,
    uint32_t flags,
#ifdef OE_CONTEXT_SWITCHLESS_EXPERIMENTAL_FEATURE
    const oe_enclave_config_t* configs,
    uint32_t config_count,
#else
    const void* config,
    uint32_t config_size,
#endif
    oe_enclave_t** enclave);

/**** ECALL prototypes. ****/
oe_result_t regular_abort(
    oe_enclave_t* enclave,
    int* _retval);

oe_result_t generate_unhandled_hardware_exception(
    oe_enclave_t* enclave,
    int* _retval);

oe_result_t test_ocall_after_abort(
    oe_enclave_t* enclave,
    int* _retval,
    void* thread_ready_count,
    void* is_enclave_crashed);

oe_result_t normal_ecall(
    oe_enclave_t* enclave,
    int* _retval);

/**** OCALL prototypes. ****/
void foobar(void);

OE_EXTERNC_END

#endif // EDGER8R_ABORTSTATUS_U_H
