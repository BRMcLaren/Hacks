/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_OCALL_U_H
#define EDGER8R_OCALL_U_H

#include <openenclave/host.h>

#include "ocall_args.h"

OE_EXTERNC_BEGIN

oe_result_t oe_create_ocall_enclave(
    const char* path,
    oe_enclave_type_t type,
    uint32_t flags,
#ifdef OE_CONTEXT_SWITCHLESS_EXPERIMENTAL_FEATURE
    const oe_enclave_config_t* configs,
    uint32_t config_count,
#else
    const void* config,
    uint32_t config_size,
#endif
    oe_enclave_t** enclave);

/**** ECALL prototypes. ****/
oe_result_t enc_test2(
    oe_enclave_t* enclave,
    uint64_t* _retval,
    uint64_t val);

oe_result_t enc_test4(oe_enclave_t* enclave);

oe_result_t was_destructor_called(
    oe_enclave_t* enclave,
    bool* _retval);

oe_result_t enc_set_tsd(
    oe_enclave_t* enclave,
    int* _retval,
    void* value);

oe_result_t enc_get_tsd(
    oe_enclave_t* enclave,
    void** _retval);

oe_result_t enc_test_my_ocall(
    oe_enclave_t* enclave,
    uint64_t* _retval);

oe_result_t enc_test_reentrancy(oe_enclave_t* enclave);

/**** OCALL prototypes. ****/
uint64_t host_my_ocall(uint64_t val);

void host_func2(const unsigned char* buffer);

void host_test_reentrancy(void);

OE_EXTERNC_END

#endif // EDGER8R_OCALL_U_H
