/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_SEALKEY_ARGS_H
#define EDGER8R_SEALKEY_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
/* There were no user includes. */

/**** User defined types in EDL. ****/
/* There were no user defined types. */

/**** ECALL marshalling structs. ****/
typedef struct _test_seal_key_args_t
{
    oe_result_t _result;
    int _retval;
    int in;
} test_seal_key_args_t;

typedef struct _enc_get_public_key_by_policy_args_t
{
    oe_result_t _result;
    int _retval;
    int policy;
    char* data;
    size_t data_len;
    uint8_t* keybuf;
    size_t keybuf_maxsize;
    size_t* keybuf_size;
    uint8_t* keyinfo;
    size_t keyinfo_maxsize;
    size_t* keyinfo_size;
} enc_get_public_key_by_policy_args_t;

typedef struct _enc_get_public_key_args_t
{
    oe_result_t _result;
    int _retval;
    char* data;
    size_t data_len;
    uint8_t* keyinfo;
    size_t keyinfo_size;
    uint8_t* keybuf;
    size_t keybuf_maxsize;
    size_t* keybuf_size;
} enc_get_public_key_args_t;

/**** OCALL marshalling structs. ****/
/* There were no ocalls. */

/**** Trusted function IDs ****/
enum
{
    sealKey_fcn_id_test_seal_key = 0,
    sealKey_fcn_id_enc_get_public_key_by_policy = 1,
    sealKey_fcn_id_enc_get_public_key = 2,
    sealKey_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{

    sealKey_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_SEALKEY_ARGS_H
