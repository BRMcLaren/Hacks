/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_CRYPTO_ARGS_H
#define EDGER8R_CRYPTO_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
/* There were no user includes. */

/**** User defined types in EDL. ****/
/* There were no user defined types. */

/**** ECALL marshalling structs. ****/
typedef struct _test_args_t
{
    oe_result_t _result;
} test_args_t;

/**** OCALL marshalling structs. ****/
typedef struct _f_open_args_t
{
    oe_result_t _result;
    int _retval;
    char* path;
    size_t path_len;
    int flags;
    int mode;
} f_open_args_t;

typedef struct _f_openat_args_t
{
    oe_result_t _result;
    int _retval;
    int dirfd;
    char* path;
    size_t path_len;
    int flags;
    int mode;
} f_openat_args_t;

typedef struct _f_read_args_t
{
    oe_result_t _result;
    int _retval;
    int fd;
    char* ptr;
    size_t len;
} f_read_args_t;

typedef struct _f_close_args_t
{
    oe_result_t _result;
    int _retval;
    int fd;
} f_close_args_t;

/**** Trusted function IDs ****/
enum
{
    crypto_fcn_id_test = 0,
    crypto_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{
    crypto_fcn_id_f_open = 0,
    crypto_fcn_id_f_openat = 1,
    crypto_fcn_id_f_read = 2,
    crypto_fcn_id_f_close = 3,
    crypto_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_CRYPTO_ARGS_H
