/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_VECTOREXCEPTION_ARGS_H
#define EDGER8R_VECTOREXCEPTION_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
#include "openenclave/internal/cpuid.h"

/**** User defined types in EDL. ****/
/* There were no user defined types. */

/**** ECALL marshalling structs. ****/
typedef struct _enc_test_vector_exception_args_t
{
    oe_result_t _result;
    int _retval;
} enc_test_vector_exception_args_t;

typedef struct _enc_test_cpuid_in_global_constructors_args_t
{
    oe_result_t _result;
} enc_test_cpuid_in_global_constructors_args_t;

typedef struct _enc_test_sigill_handling_args_t
{
    oe_result_t _result;
    int _retval;
    uint32_t* cpuid_table;
} enc_test_sigill_handling_args_t;

/**** OCALL marshalling structs. ****/
/* There were no ocalls. */

/**** Trusted function IDs ****/
enum
{
    VectorException_fcn_id_enc_test_vector_exception = 0,
    VectorException_fcn_id_enc_test_cpuid_in_global_constructors = 1,
    VectorException_fcn_id_enc_test_sigill_handling = 2,
    VectorException_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{

    VectorException_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_VECTOREXCEPTION_ARGS_H
