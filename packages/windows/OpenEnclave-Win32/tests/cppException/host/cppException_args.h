/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_CPPEXCEPTION_ARGS_H
#define EDGER8R_CPPEXCEPTION_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
/* There were no user includes. */

/**** User defined types in EDL. ****/
typedef enum unhandled_exception_func_num
{
    EXCEPTION_SPECIFICATION,
    EXCEPTION_IN_UNWIND,
    UNHANDLED_EXCEPTION
} unhandled_exception_func_num;

/**** ECALL marshalling structs. ****/
typedef struct _test_args_t
{
    oe_result_t _result;
    int _retval;
} test_args_t;

typedef struct _test_unhandled_exception_args_t
{
    oe_result_t _result;
    int _retval;
    enum unhandled_exception_func_num func_num;
} test_unhandled_exception_args_t;

/**** OCALL marshalling structs. ****/
/* There were no ocalls. */

/**** Trusted function IDs ****/
enum
{
    cppException_fcn_id_test = 0,
    cppException_fcn_id_test_unhandled_exception = 1,
    cppException_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{

    cppException_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_CPPEXCEPTION_ARGS_H
