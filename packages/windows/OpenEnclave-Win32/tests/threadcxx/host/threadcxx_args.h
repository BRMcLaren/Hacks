/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_THREADCXX_ARGS_H
#define EDGER8R_THREADCXX_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

/* #include <errno.h> - Errno propagation not enabled so not included. */

#include <openenclave/bits/result.h>

/**** User includes. ****/
/* There were no user includes. */

/**** User defined types in EDL. ****/
/* There were no user defined types. */

/**** ECALL marshalling structs. ****/
typedef struct _enc_test_mutex_cxx_args_t
{
    oe_result_t _result;
} enc_test_mutex_cxx_args_t;

typedef struct _enc_test_mutex_cxx_counts_args_t
{
    oe_result_t _result;
    size_t* count1;
    size_t* count2;
} enc_test_mutex_cxx_counts_args_t;

typedef struct _enc_test_cond_cxx_args_t
{
    oe_result_t _result;
    size_t num_threads;
} enc_test_cond_cxx_args_t;

typedef struct _enc_test_cond_cxx_signal_args_t
{
    oe_result_t _result;
} enc_test_cond_cxx_signal_args_t;

typedef struct _enc_test_cb_cxx_waiter_args_t
{
    oe_result_t _result;
} enc_test_cb_cxx_waiter_args_t;

typedef struct _enc_test_cb_cxx_signal_args_t
{
    oe_result_t _result;
} enc_test_cb_cxx_signal_args_t;

typedef struct _enc_wait_for_exclusive_access_cxx_args_t
{
    oe_result_t _result;
} enc_wait_for_exclusive_access_cxx_args_t;

typedef struct _enc_relinquish_exclusive_access_cxx_args_t
{
    oe_result_t _result;
} enc_relinquish_exclusive_access_cxx_args_t;

typedef struct _enc_lock_and_unlock_mutexes_cxx_args_t
{
    oe_result_t _result;
    char* mutexes;
    size_t mutexes_len;
} enc_lock_and_unlock_mutexes_cxx_args_t;

/**** OCALL marshalling structs. ****/
/* There were no ocalls. */

/**** Trusted function IDs ****/
enum
{
    threadcxx_fcn_id_enc_test_mutex_cxx = 0,
    threadcxx_fcn_id_enc_test_mutex_cxx_counts = 1,
    threadcxx_fcn_id_enc_test_cond_cxx = 2,
    threadcxx_fcn_id_enc_test_cond_cxx_signal = 3,
    threadcxx_fcn_id_enc_test_cb_cxx_waiter = 4,
    threadcxx_fcn_id_enc_test_cb_cxx_signal = 5,
    threadcxx_fcn_id_enc_wait_for_exclusive_access_cxx = 6,
    threadcxx_fcn_id_enc_relinquish_exclusive_access_cxx = 7,
    threadcxx_fcn_id_enc_lock_and_unlock_mutexes_cxx = 8,
    threadcxx_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{

    threadcxx_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_THREADCXX_ARGS_H
