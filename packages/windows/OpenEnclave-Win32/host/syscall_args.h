/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_SYSCALL_ARGS_H
#define EDGER8R_SYSCALL_ARGS_H

#include <stdint.h>
#include <stdlib.h> /* for wchar_t */

#include <errno.h>

#include <openenclave/bits/result.h>

/**** User includes. ****/
#include "openenclave/internal/syscall/netdb.h"
#include "openenclave/internal/syscall/sys/epoll.h"
#include "openenclave/internal/syscall/sys/poll.h"
#include "openenclave/internal/syscall/sys/socket.h"
#include "openenclave/internal/syscall/sys/utsname.h"
#include "openenclave/internal/syscall/sys/stat.h"
#include "openenclave/internal/syscall/dirent.h"
#include "openenclave/internal/syscall/poll.h"
#include "openenclave/internal/syscall/types.h"

/**** User defined types in EDL. ****/
/* There were no user defined types. */

/**** ECALL marshalling structs. ****/
typedef struct _oe_syscall_stub_ecall_args_t
{
    oe_result_t _result;
} oe_syscall_stub_ecall_args_t;

/**** OCALL marshalling structs. ****/
typedef struct _oe_syscall_uname_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    struct oe_utsname* buf;
} oe_syscall_uname_ocall_args_t;

typedef struct _oe_syscall_open_ocall_args_t
{
    oe_result_t _result;
    oe_host_fd_t _retval;
    int _ocall_errno;
    char* pathname;
    size_t pathname_len;
    int flags;
    oe_mode_t mode;
} oe_syscall_open_ocall_args_t;

typedef struct _oe_syscall_read_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t fd;
    void* buf;
    size_t count;
} oe_syscall_read_ocall_args_t;

typedef struct _oe_syscall_write_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t fd;
    void* buf;
    size_t count;
} oe_syscall_write_ocall_args_t;

typedef struct _oe_syscall_readv_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t fd;
    void* iov_buf;
    int iovcnt;
    size_t iov_buf_size;
} oe_syscall_readv_ocall_args_t;

typedef struct _oe_syscall_writev_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t fd;
    void* iov_buf;
    int iovcnt;
    size_t iov_buf_size;
} oe_syscall_writev_ocall_args_t;

typedef struct _oe_syscall_lseek_ocall_args_t
{
    oe_result_t _result;
    oe_off_t _retval;
    int _ocall_errno;
    oe_host_fd_t fd;
    oe_off_t offset;
    int whence;
} oe_syscall_lseek_ocall_args_t;

typedef struct _oe_syscall_close_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t fd;
} oe_syscall_close_ocall_args_t;

typedef struct _oe_syscall_close_socket_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
} oe_syscall_close_socket_ocall_args_t;

typedef struct _oe_syscall_dup_ocall_args_t
{
    oe_result_t _result;
    oe_host_fd_t _retval;
    int _ocall_errno;
    oe_host_fd_t oldfd;
} oe_syscall_dup_ocall_args_t;

typedef struct _oe_syscall_opendir_ocall_args_t
{
    oe_result_t _result;
    uint64_t _retval;
    int _ocall_errno;
    char* name;
    size_t name_len;
} oe_syscall_opendir_ocall_args_t;

typedef struct _oe_syscall_readdir_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    uint64_t dirp;
    struct oe_dirent* entry;
} oe_syscall_readdir_ocall_args_t;

typedef struct _oe_syscall_rewinddir_ocall_args_t
{
    oe_result_t _result;
    uint64_t dirp;
} oe_syscall_rewinddir_ocall_args_t;

typedef struct _oe_syscall_closedir_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    uint64_t dirp;
} oe_syscall_closedir_ocall_args_t;

typedef struct _oe_syscall_stat_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    char* pathname;
    size_t pathname_len;
    struct oe_stat* buf;
} oe_syscall_stat_ocall_args_t;

typedef struct _oe_syscall_access_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    char* pathname;
    size_t pathname_len;
    int mode;
} oe_syscall_access_ocall_args_t;

typedef struct _oe_syscall_link_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    char* oldpath;
    size_t oldpath_len;
    char* newpath;
    size_t newpath_len;
} oe_syscall_link_ocall_args_t;

typedef struct _oe_syscall_unlink_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    char* pathname;
    size_t pathname_len;
} oe_syscall_unlink_ocall_args_t;

typedef struct _oe_syscall_rename_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    char* oldpath;
    size_t oldpath_len;
    char* newpath;
    size_t newpath_len;
} oe_syscall_rename_ocall_args_t;

typedef struct _oe_syscall_truncate_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    char* path;
    size_t path_len;
    oe_off_t length;
} oe_syscall_truncate_ocall_args_t;

typedef struct _oe_syscall_mkdir_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    char* pathname;
    size_t pathname_len;
    oe_mode_t mode;
} oe_syscall_mkdir_ocall_args_t;

typedef struct _oe_syscall_rmdir_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    char* pathname;
    size_t pathname_len;
} oe_syscall_rmdir_ocall_args_t;

typedef struct _oe_syscall_socket_ocall_args_t
{
    oe_result_t _result;
    oe_host_fd_t _retval;
    int _ocall_errno;
    int domain;
    int type;
    int protocol;
} oe_syscall_socket_ocall_args_t;

typedef struct _oe_syscall_socketpair_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    int domain;
    int type;
    int protocol;
    oe_host_fd_t* sv;
} oe_syscall_socketpair_ocall_args_t;

typedef struct _oe_syscall_connect_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    struct oe_sockaddr* addr;
    oe_socklen_t addrlen;
} oe_syscall_connect_ocall_args_t;

typedef struct _oe_syscall_accept_ocall_args_t
{
    oe_result_t _result;
    oe_host_fd_t _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    struct oe_sockaddr* addr;
    oe_socklen_t addrlen_in;
    oe_socklen_t* addrlen_out;
} oe_syscall_accept_ocall_args_t;

typedef struct _oe_syscall_bind_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    struct oe_sockaddr* addr;
    oe_socklen_t addrlen;
} oe_syscall_bind_ocall_args_t;

typedef struct _oe_syscall_listen_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    int backlog;
} oe_syscall_listen_ocall_args_t;

typedef struct _oe_syscall_recvmsg_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    void* msg_name;
    oe_socklen_t msg_namelen;
    oe_socklen_t* msg_namelen_out;
    void* msg_iov_buf;
    size_t msg_iovlen;
    size_t msg_iov_buf_size;
    void* msg_control;
    size_t msg_controllen;
    size_t* msg_controllen_out;
    int flags;
} oe_syscall_recvmsg_ocall_args_t;

typedef struct _oe_syscall_sendmsg_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    void* msg_name;
    oe_socklen_t msg_namelen;
    void* msg_iov_buf;
    size_t msg_iovlen;
    size_t msg_iov_buf_size;
    void* msg_control;
    size_t msg_controllen;
    int flags;
} oe_syscall_sendmsg_ocall_args_t;

typedef struct _oe_syscall_recv_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    void* buf;
    size_t len;
    int flags;
} oe_syscall_recv_ocall_args_t;

typedef struct _oe_syscall_recvfrom_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    void* buf;
    size_t len;
    int flags;
    struct oe_sockaddr* src_addr;
    oe_socklen_t addrlen_in;
    oe_socklen_t* addrlen_out;
} oe_syscall_recvfrom_ocall_args_t;

typedef struct _oe_syscall_send_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    void* buf;
    size_t len;
    int flags;
} oe_syscall_send_ocall_args_t;

typedef struct _oe_syscall_sendto_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    void* buf;
    size_t len;
    int flags;
    struct oe_sockaddr* dest_addr;
    oe_socklen_t addrlen;
} oe_syscall_sendto_ocall_args_t;

typedef struct _oe_syscall_recvv_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t fd;
    void* iov_buf;
    int iovcnt;
    size_t iov_buf_size;
} oe_syscall_recvv_ocall_args_t;

typedef struct _oe_syscall_sendv_ocall_args_t
{
    oe_result_t _result;
    ssize_t _retval;
    int _ocall_errno;
    oe_host_fd_t fd;
    void* iov_buf;
    int iovcnt;
    size_t iov_buf_size;
} oe_syscall_sendv_ocall_args_t;

typedef struct _oe_syscall_shutdown_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    int how;
} oe_syscall_shutdown_ocall_args_t;

typedef struct _oe_syscall_fcntl_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t fd;
    int cmd;
    uint64_t arg;
    uint64_t argsize;
    void* argout;
} oe_syscall_fcntl_ocall_args_t;

typedef struct _oe_syscall_ioctl_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t fd;
    uint64_t request;
    uint64_t arg;
    uint64_t argsize;
    void* argout;
} oe_syscall_ioctl_ocall_args_t;

typedef struct _oe_syscall_setsockopt_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    int level;
    int optname;
    void* optval;
    oe_socklen_t optlen;
} oe_syscall_setsockopt_ocall_args_t;

typedef struct _oe_syscall_getsockopt_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    int level;
    int optname;
    void* optval;
    oe_socklen_t optlen_in;
    oe_socklen_t* optlen_out;
} oe_syscall_getsockopt_ocall_args_t;

typedef struct _oe_syscall_getsockname_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    struct oe_sockaddr* addr;
    oe_socklen_t addrlen_in;
    oe_socklen_t* addrlen_out;
} oe_syscall_getsockname_ocall_args_t;

typedef struct _oe_syscall_getpeername_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
    struct oe_sockaddr* addr;
    oe_socklen_t addrlen_in;
    oe_socklen_t* addrlen_out;
} oe_syscall_getpeername_ocall_args_t;

typedef struct _oe_syscall_shutdown_sockets_device_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t sockfd;
} oe_syscall_shutdown_sockets_device_ocall_args_t;

typedef struct _oe_syscall_kill_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    int pid;
    int signum;
} oe_syscall_kill_ocall_args_t;

typedef struct _oe_syscall_getaddrinfo_open_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    char* node;
    size_t node_len;
    char* service;
    size_t service_len;
    struct oe_addrinfo* hints;
    uint64_t* handle;
} oe_syscall_getaddrinfo_open_ocall_args_t;

typedef struct _oe_syscall_getaddrinfo_read_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    uint64_t handle;
    int* ai_flags;
    int* ai_family;
    int* ai_socktype;
    int* ai_protocol;
    oe_socklen_t ai_addrlen_in;
    oe_socklen_t* ai_addrlen;
    struct oe_sockaddr* ai_addr;
    size_t ai_canonnamelen_in;
    size_t* ai_canonnamelen;
    char* ai_canonname;
} oe_syscall_getaddrinfo_read_ocall_args_t;

typedef struct _oe_syscall_getaddrinfo_close_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    uint64_t handle;
} oe_syscall_getaddrinfo_close_ocall_args_t;

typedef struct _oe_syscall_getnameinfo_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    struct oe_sockaddr* sa;
    oe_socklen_t salen;
    char* host;
    oe_socklen_t hostlen;
    char* serv;
    oe_socklen_t servlen;
    int flags;
} oe_syscall_getnameinfo_ocall_args_t;

typedef struct _oe_syscall_epoll_create1_ocall_args_t
{
    oe_result_t _result;
    oe_host_fd_t _retval;
    int _ocall_errno;
    int flags;
} oe_syscall_epoll_create1_ocall_args_t;

typedef struct _oe_syscall_epoll_wait_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    int64_t epfd;
    struct oe_epoll_event* events;
    unsigned int maxevents;
    int timeout;
} oe_syscall_epoll_wait_ocall_args_t;

typedef struct _oe_syscall_epoll_wake_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
} oe_syscall_epoll_wake_ocall_args_t;

typedef struct _oe_syscall_epoll_ctl_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    int64_t epfd;
    int op;
    int64_t fd;
    struct oe_epoll_event* event;
} oe_syscall_epoll_ctl_ocall_args_t;

typedef struct _oe_syscall_epoll_close_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    oe_host_fd_t epfd;
} oe_syscall_epoll_close_ocall_args_t;

typedef struct _oe_syscall_poll_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    struct oe_host_pollfd* host_fds;
    oe_nfds_t nfds;
    int timeout;
} oe_syscall_poll_ocall_args_t;

typedef struct _oe_syscall_getpid_ocall_args_t
{
    oe_result_t _result;
    int _retval;
} oe_syscall_getpid_ocall_args_t;

typedef struct _oe_syscall_getppid_ocall_args_t
{
    oe_result_t _result;
    int _retval;
} oe_syscall_getppid_ocall_args_t;

typedef struct _oe_syscall_getpgrp_ocall_args_t
{
    oe_result_t _result;
    int _retval;
} oe_syscall_getpgrp_ocall_args_t;

typedef struct _oe_syscall_getuid_ocall_args_t
{
    oe_result_t _result;
    unsigned int _retval;
} oe_syscall_getuid_ocall_args_t;

typedef struct _oe_syscall_geteuid_ocall_args_t
{
    oe_result_t _result;
    unsigned int _retval;
} oe_syscall_geteuid_ocall_args_t;

typedef struct _oe_syscall_getgid_ocall_args_t
{
    oe_result_t _result;
    unsigned int _retval;
} oe_syscall_getgid_ocall_args_t;

typedef struct _oe_syscall_getegid_ocall_args_t
{
    oe_result_t _result;
    unsigned int _retval;
} oe_syscall_getegid_ocall_args_t;

typedef struct _oe_syscall_getpgid_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    int pid;
} oe_syscall_getpgid_ocall_args_t;

typedef struct _oe_syscall_getgroups_ocall_args_t
{
    oe_result_t _result;
    int _retval;
    int _ocall_errno;
    size_t size;
    unsigned int* list;
} oe_syscall_getgroups_ocall_args_t;

/**** Trusted function IDs ****/
enum
{
    syscall_fcn_id_oe_syscall_stub_ecall = 0,
    syscall_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** Untrusted function IDs. ****/
enum
{
    syscall_fcn_id_oe_syscall_uname_ocall = 0,
    syscall_fcn_id_oe_syscall_open_ocall = 1,
    syscall_fcn_id_oe_syscall_read_ocall = 2,
    syscall_fcn_id_oe_syscall_write_ocall = 3,
    syscall_fcn_id_oe_syscall_readv_ocall = 4,
    syscall_fcn_id_oe_syscall_writev_ocall = 5,
    syscall_fcn_id_oe_syscall_lseek_ocall = 6,
    syscall_fcn_id_oe_syscall_close_ocall = 7,
    syscall_fcn_id_oe_syscall_close_socket_ocall = 8,
    syscall_fcn_id_oe_syscall_dup_ocall = 9,
    syscall_fcn_id_oe_syscall_opendir_ocall = 10,
    syscall_fcn_id_oe_syscall_readdir_ocall = 11,
    syscall_fcn_id_oe_syscall_rewinddir_ocall = 12,
    syscall_fcn_id_oe_syscall_closedir_ocall = 13,
    syscall_fcn_id_oe_syscall_stat_ocall = 14,
    syscall_fcn_id_oe_syscall_access_ocall = 15,
    syscall_fcn_id_oe_syscall_link_ocall = 16,
    syscall_fcn_id_oe_syscall_unlink_ocall = 17,
    syscall_fcn_id_oe_syscall_rename_ocall = 18,
    syscall_fcn_id_oe_syscall_truncate_ocall = 19,
    syscall_fcn_id_oe_syscall_mkdir_ocall = 20,
    syscall_fcn_id_oe_syscall_rmdir_ocall = 21,
    syscall_fcn_id_oe_syscall_socket_ocall = 22,
    syscall_fcn_id_oe_syscall_socketpair_ocall = 23,
    syscall_fcn_id_oe_syscall_connect_ocall = 24,
    syscall_fcn_id_oe_syscall_accept_ocall = 25,
    syscall_fcn_id_oe_syscall_bind_ocall = 26,
    syscall_fcn_id_oe_syscall_listen_ocall = 27,
    syscall_fcn_id_oe_syscall_recvmsg_ocall = 28,
    syscall_fcn_id_oe_syscall_sendmsg_ocall = 29,
    syscall_fcn_id_oe_syscall_recv_ocall = 30,
    syscall_fcn_id_oe_syscall_recvfrom_ocall = 31,
    syscall_fcn_id_oe_syscall_send_ocall = 32,
    syscall_fcn_id_oe_syscall_sendto_ocall = 33,
    syscall_fcn_id_oe_syscall_recvv_ocall = 34,
    syscall_fcn_id_oe_syscall_sendv_ocall = 35,
    syscall_fcn_id_oe_syscall_shutdown_ocall = 36,
    syscall_fcn_id_oe_syscall_fcntl_ocall = 37,
    syscall_fcn_id_oe_syscall_ioctl_ocall = 38,
    syscall_fcn_id_oe_syscall_setsockopt_ocall = 39,
    syscall_fcn_id_oe_syscall_getsockopt_ocall = 40,
    syscall_fcn_id_oe_syscall_getsockname_ocall = 41,
    syscall_fcn_id_oe_syscall_getpeername_ocall = 42,
    syscall_fcn_id_oe_syscall_shutdown_sockets_device_ocall = 43,
    syscall_fcn_id_oe_syscall_kill_ocall = 44,
    syscall_fcn_id_oe_syscall_getaddrinfo_open_ocall = 45,
    syscall_fcn_id_oe_syscall_getaddrinfo_read_ocall = 46,
    syscall_fcn_id_oe_syscall_getaddrinfo_close_ocall = 47,
    syscall_fcn_id_oe_syscall_getnameinfo_ocall = 48,
    syscall_fcn_id_oe_syscall_epoll_create1_ocall = 49,
    syscall_fcn_id_oe_syscall_epoll_wait_ocall = 50,
    syscall_fcn_id_oe_syscall_epoll_wake_ocall = 51,
    syscall_fcn_id_oe_syscall_epoll_ctl_ocall = 52,
    syscall_fcn_id_oe_syscall_epoll_close_ocall = 53,
    syscall_fcn_id_oe_syscall_poll_ocall = 54,
    syscall_fcn_id_oe_syscall_getpid_ocall = 55,
    syscall_fcn_id_oe_syscall_getppid_ocall = 56,
    syscall_fcn_id_oe_syscall_getpgrp_ocall = 57,
    syscall_fcn_id_oe_syscall_getuid_ocall = 58,
    syscall_fcn_id_oe_syscall_geteuid_ocall = 59,
    syscall_fcn_id_oe_syscall_getgid_ocall = 60,
    syscall_fcn_id_oe_syscall_getegid_ocall = 61,
    syscall_fcn_id_oe_syscall_getpgid_ocall = 62,
    syscall_fcn_id_oe_syscall_getgroups_ocall = 63,
    syscall_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

#endif // EDGER8R_SYSCALL_ARGS_H
