/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_SGX_U_H
#define EDGER8R_SGX_U_H

#include <openenclave/host.h>

#include "sgx_args.h"

OE_EXTERNC_BEGIN

oe_result_t oe_create_sgx_enclave(
    const char* path,
    oe_enclave_type_t type,
    uint32_t flags,
#ifdef OE_CONTEXT_SWITCHLESS_EXPERIMENTAL_FEATURE
    const oe_enclave_config_t* configs,
    uint32_t config_count,
#else
    const void* config,
    uint32_t config_size,
#endif
    oe_enclave_t** enclave);

/**** ECALL prototypes. ****/
oe_result_t oe_get_sgx_report_ecall(
    oe_enclave_t* enclave,
    oe_result_t* _retval,
    const void* opt_params,
    size_t opt_params_size,
    sgx_report_t* report);

/**** OCALL prototypes. ****/
oe_result_t oe_get_qetarget_info_ocall(sgx_target_info_t* target_info);

oe_result_t oe_get_quote_ocall(
    const sgx_report_t* sgx_report,
    void* quote,
    size_t quote_size,
    size_t* quote_size_out);

oe_result_t oe_get_qe_identify_info_ocall(
    void* qe_id_info,
    size_t qe_id_info_size,
    size_t* qe_id_info_size_out,
    void* issuer_chain,
    size_t issuer_chain_size,
    size_t* issuer_chain_size_out);

oe_result_t oe_get_revocation_info_ocall(
    uint8_t fmspc[6],
    size_t num_crl_urls,
    const char* crl_urls0,
    const char* crl_urls1,
    const char* crl_urls2,
    void* tcb_info,
    size_t tcb_info_size,
    size_t* tcb_info_size_out,
    void* tcb_issuer_chain,
    size_t tcb_issuer_chain_size,
    size_t* tcb_issuer_chain_size_out,
    void* crl0,
    size_t crl0_size,
    size_t* crl0_size_out,
    void* crl1,
    size_t crl1_size,
    size_t* crl1_size_out,
    void* crl2,
    size_t crl2_size,
    size_t* crl2_size_out,
    void* crl_issuer_chain0,
    size_t crl_issuer_chain0_size,
    size_t* crl_issuer_chain0_size_out,
    void* crl_issuer_chain1,
    size_t crl_issuer_chain1_size,
    size_t* crl_issuer_chain1_size_out,
    void* crl_issuer_chain2,
    size_t crl_issuer_chain2_size,
    size_t* crl_issuer_chain2_size_out);

oe_result_t oe_backtrace_symbols_ocall(
    oe_enclave_t* oe_enclave,
    const uint64_t* buffer,
    size_t size,
    void* symbols_buffer,
    size_t symbols_buffer_size,
    size_t* symbols_buffer_size_out);

void oe_thread_wake_wait_ocall(
    oe_enclave_t* oe_enclave,
    uint64_t waiter_tcs,
    uint64_t self_tcs);

oe_result_t oe_get_cpuid_table_ocall(
    void* cpuid_table_buffer,
    size_t cpuid_table_buffer_size);

OE_EXTERNC_END

#endif // EDGER8R_SGX_U_H
